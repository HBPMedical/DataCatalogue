"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const html_transformer_1 = require("../languages/html.transformer");
const get_file_type_1 = require("../../utilities/get-file-type");
class AngularExternalTemplatesFileTransformer {
    static inlineExternalTemplate(externalTemplate, template) {
        return __awaiter(this, void 0, void 0, function* () {
            const preparedTemplate = this.prepareTemplate(template, get_file_type_1.getFileType(externalTemplate.template.path));
            externalTemplate.node.replaceWithText('template');
            externalTemplate.template.node.replaceWithText(`'${preparedTemplate}'`);
        });
    }
    static prepareTemplate(template, fileType) {
        switch (fileType) {
            case 'html':
                return html_transformer_1.HTMLTransformer.minify(template);
            default:
                throw new Error(`Angular Package Builder: The file type "${fileType}" is not supported for external templates.`);
        }
    }
}
exports.AngularExternalTemplatesFileTransformer = AngularExternalTemplatesFileTransformer;
//# sourceMappingURL=angular-external-templates.transformer.js.map